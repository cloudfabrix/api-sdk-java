/*
 * CloudFabrix RDA Platform API
 * CloudFabrix RDA Platform API
 *
 * The version of the OpenAPI document: 3.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * An enumeration.
 */
@JsonAdapter(PstreamsEnum.Adapter.class)
public enum PstreamsEnum {
  
  COLLECTION_STATUS("collection_status"),
  
  _COLLECTION_STATUS("-collection_status"),
  
  DATABASE("database"),
  
  _DATABASE("-database"),
  
  DATASTORE_TYPE("datastore_type"),
  
  _DATASTORE_TYPE("-datastore_type"),
  
  INDEX_NAME("index_name"),
  
  _INDEX_NAME("-index_name"),
  
  NAME("name"),
  
  _NAME("-name"),
  
  RETENTION_DAYS("retention_days"),
  
  _RETENTION_DAYS("-retention_days"),
  
  SAVED_TIME("saved_time"),
  
  _SAVED_TIME("-saved_time"),
  
  SYSTEM_DEFINED("system_defined"),
  
  _SYSTEM_DEFINED("-system_defined"),
  
  TIMESTAMP("timestamp"),
  
  _TIMESTAMP("-timestamp");

  private String value;

  PstreamsEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static PstreamsEnum fromValue(String value) {
    for (PstreamsEnum b : PstreamsEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<PstreamsEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final PstreamsEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public PstreamsEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return PstreamsEnum.fromValue(value);
    }
  }
}

