/*
 * CloudFabrix RDA Platform API
 * CloudFabrix RDA Platform API
 *
 * The version of the OpenAPI document: 3.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HTTPValidationError;
import org.openapitools.client.model.PstreamAddModel;
import org.openapitools.client.model.PstreamEditModel;
import org.openapitools.client.model.PstreamsEnum;
import org.openapitools.client.model.TableReportResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PersistentStreamsApi
 */
@Disabled
public class PersistentStreamsApiTest {

    private final PersistentStreamsApi api = new PersistentStreamsApi();

    /**
     * Add a pstream
     *
     * Add a new pstream to the system
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addPstreamTest() throws ApiException {
        PstreamAddModel pstreamAddModel = null;
        Object response = api.addPstream(pstreamAddModel);
        // TODO: test validations
    }

    /**
     * Delete a pstream.
     *
     * Delete a persistent stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePstreamTest() throws ApiException {
        String name = null;
        Boolean deleteData = null;
        Object response = api.deletePstream(name, deleteData);
        // TODO: test validations
    }

    /**
     * Edit attributes of a pstream
     *
     * Edit the attributes of a persistent stream
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void editPstreamTest() throws ApiException {
        String name = null;
        PstreamEditModel pstreamEditModel = null;
        Object response = api.editPstream(name, pstreamEditModel);
        // TODO: test validations
    }

    /**
     * Get data of a pstream
     *
     * Get data of a persistent stream
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPstreamDataTest() throws ApiException {
        String name = null;
        String cfxqlQuery = null;
        String search = null;
        List<String> sort = null;
        Integer offset = null;
        Integer limit = null;
        TableReportResponse response = api.getPstreamData(name, cfxqlQuery, search, sort, offset, limit);
        // TODO: test validations
    }

    /**
     * Fetch meta data about pstreams
     *
     * Fetch meta data about pstreams
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPstreamsTest() throws ApiException {
        String cfxqlQuery = null;
        String search = null;
        Integer offset = null;
        Integer limit = null;
        List<PstreamsEnum> sort = null;
        TableReportResponse response = api.getPstreams(cfxqlQuery, search, offset, limit, sort);
        // TODO: test validations
    }

}
