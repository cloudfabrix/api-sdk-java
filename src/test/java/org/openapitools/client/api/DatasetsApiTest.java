/*
 * CloudFabrix RDA Platform API
 * CloudFabrix RDA Platform API
 *
 * The version of the OpenAPI document: 3.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DatasetAddModel;
import org.openapitools.client.model.DatasetsEnum;
import org.openapitools.client.model.HTTPValidationError;
import org.openapitools.client.model.TableReportResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DatasetsApi
 */
@Disabled
public class DatasetsApiTest {

    private final DatasetsApi api = new DatasetsApi();

    /**
     * Add a dataset
     *
     * Add a dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addDatasetTest() throws ApiException {
        DatasetAddModel datasetAddModel = null;
        Object response = api.addDataset(datasetAddModel);
        // TODO: test validations
    }

    /**
     * Delete a dataset
     *
     * Delete a dataset. Please note that all the data of the dataset will be deleted and can not be undone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDatasetTest() throws ApiException {
        String name = null;
        Object response = api.deleteDataset(name);
        // TODO: test validations
    }

    /**
     * Delete enitre data of a dataset
     *
     * Delete entire data of a dataset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDatasetAllDataTest() throws ApiException {
        String name = null;
        Object response = api.deleteDatasetAllData(name);
        // TODO: test validations
    }

    /**
     * Delete matching dataset rows
     *
     * Delete dataset rows matching the input data     All the rows in existing dataset that match all the keys in input data are deleted.     NOTE: This directly updates the dataset and all drafts are removed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDatasetRowsTest() throws ApiException {
        String name = null;
        List<String> keys = null;
        List<Object> requestBody = null;
        Object response = api.deleteDatasetRows(name, keys, requestBody);
        // TODO: test validations
    }

    /**
     * Get data of a dataset
     *
     * Get data of a dataset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDatasetDataTest() throws ApiException {
        String name = null;
        String cfxqlQuery = null;
        String search = null;
        List<String> sort = null;
        Integer offset = null;
        Integer limit = null;
        TableReportResponse response = api.getDatasetData(name, cfxqlQuery, search, sort, offset, limit);
        // TODO: test validations
    }

    /**
     * Fetch meta data about datasets
     *
     * Fetch meta data about datasets
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDatasetsTest() throws ApiException {
        String cfxqlQuery = null;
        String search = null;
        Integer offset = null;
        Integer limit = null;
        List<DatasetsEnum> sort = null;
        TableReportResponse response = api.getDatasets(cfxqlQuery, search, offset, limit, sort);
        // TODO: test validations
    }

    /**
     * Update rows of a dataset
     *
     * Update (merge or replace) existing dataset data.     This function currently does not support deleting rows.&lt;br/&gt;     If replace is true, entire existing dataset data is replaced with the new data in input.&lt;br/&gt;     If replace is false, &lt;br/&gt;     &lt;ul&gt;         &lt;li&gt;If keys are not given, the input data is appened to the existing dataset.         &lt;li&gt;If keys are given then the following flow explains the operation&lt;br/&gt;             For each row in the input data:             &lt;ul&gt;                 &lt;li&gt;The rows with same values for all the keys are replaced with input row.                 &lt;li&gt;Other rows are appended to the existing dataset             &lt;/ul&gt;         Error raised when:             &lt;ul&gt;                 &lt;li&gt;If there are duplicate rows in input data with same key values                 &lt;li&gt;If any key passed in keys is not present as a column in the input data             &lt;/ul&gt;     &lt;/ul&gt;     NOTE: This directly updates the dataset and all drafts are removed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDatasetDataTest() throws ApiException {
        String name = null;
        List<Object> requestBody = null;
        Boolean replace = null;
        List<String> keys = null;
        Object response = api.updateDatasetData(name, requestBody, replace, keys);
        // TODO: test validations
    }

}
